using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Pacman
{
    internal class Map
    {
        public char[,] level = new char[,] { };
        public int size = 0;
        private int counter = 0;
        public Map(int celdaSize)
        {
            //28 31
            level = new char[,] {
                { '2','2','2','2','2','2','2','2','2','2','2','2','2','2','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2'},
                { '2','1','1','1','1','1','1','1','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','2','2','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','2','2','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','2','2','2','2','1','2','2','2','2','2','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','2','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','2','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','1','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','2','2','2','2','1','2','2','2','2','2','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','1','1','1','1','1','1','2'},
                { '2','1','2','2','2','1','2','2','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','2','2','1','1','1','1','2'},
                { '2','1','1','1','1','1','1','1','1','2','1','1','1','2','1','2','1','1','1','2','1','1','1','1','2','2','1','1','1','1','2'},
                { '2','2','2','2','2','2','2','2','2','2','2','2','2','2','1','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2','2'}



            };

            size = celdaSize;
        }

        public void DrawMap(Graphics graphics)
        {
            for (int y = 0; y < this.level.GetLength(0); y++)
            {

                for (int x = 0; x < this.level.GetLength(1); x++)
                {
                    //graphics.FillRectangle(Brushes.Yellow, x * size, y * size, size, size);

                    switch (this.level[y, x])
                    {
                        case '1':
                            graphics.FillRectangle(Brushes.Wheat, y * size, x * size, size, size);

                            break;
                        //case 'a':
                        //    Ladrillo.DrawLadrillo(graphics,x,y,size);
                        //    break;
                        case 'p':
                            Pill.DrawPill(graphics, x, y, size, y);
                            break;
                        case 'b':
                            Pacman.DrawPacman(graphics, x, y, size);
                            break;






                        default: break;
                    }
                }
            }
        }

        public void MoveUp(Pacman pacman)
        {
            int x = pacman.pos.X;
            int y = pacman.pos.Y;

            if (x >= 0 && y > 0 && x <= 15 && y <= 15)
            {
                if (this.level[x, y - 1] == '1' || this.level[x, y - 1] == 'p') // pass tile
                {
                    this.level[x, y - 1] = 'b';
                    pacman.pos.Y--;
                    this.level[x, y] = '1';
                }
                else
                {
                    // do nothing
                }
            }

        }
        public void MoveDown(Pacman pacman)
        {
            int x = pacman.pos.X;
            int y = pacman.pos.Y;

            if (x >= 0 && y >= 0 && x <= 15 && y < 14)
            {
                if (this.level[x, y + 1] == '1' || this.level[x, y + 1] == 'p') // pass tile
                {
                    this.level[x, y + 1] = 'b';
                    pacman.pos.Y++;
                    this.level[x, y] = '1';
                }
                else
                {
                    // do nothing
                }
            }
        }
        public void MoveRight(Pacman pacman)
        {
            int x = pacman.pos.X;
            int y = pacman.pos.Y;

            if (x >= 0 && y >= 0 && x < size && y <= size)
            {
                if (this.level[x + 1, y] == '1' || this.level[x + 1, y] == 'p') // pass tile
                {
                    this.level[x + 1, y] = 'b';
                    pacman.pos.X++;
                    this.level[x, y] = '1';
                }
                else
                {
                    // do nothing
                }
            }


        }
        public void MoveLeft(Pacman pacman)
        {
            int x = pacman.pos.X;
            int y = pacman.pos.Y;

            if (x > 0 && y >= 0 && x <= 15 && y <= 15)
            {
                if (this.level[x - 1, y] == '1' || this.level[x - 1, y] == 'p') // pass tile
                {
                    this.level[x - 1, y] = 'b';
                    pacman.pos.X--;
                    this.level[x, y] = '1';
                }
                else
                {
                    // do nothing
                }
            }


        }

        public void TimerCounter()
        {
            counter++;
        }

        public void SpawnPacman(Pacman pacman)
        {
            int x = pacman.pos.X;
            int y = pacman.pos.Y;
            Debug.WriteLine("a");


            this.level[x, y] = 'b';



        }
        public void DrawFromResource(Graphics graphics, int x, int y, int size, Image image)
        {
            graphics.DrawImage(image, new Rectangle(x * size, y * size, size, size));
        }
    }
}
